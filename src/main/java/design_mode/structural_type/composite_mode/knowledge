合成模式，有时又叫做部分-整体（Part-Whole）模式。
合成模式将对象组织到树结构中，可以用来描述整体与部分的关系。
合成模式可以使客户端将单纯元素与复合元素同等看待。
合成模式的目的是让客户端不再区分操作的是”树枝对象“还是”树叶对象“，而是以一个统一的方式来操作。

合成模式有两种实现方式：安全性合成模式、透明性合成模式。

安全性合成模式 —— 指从客户端使用合成模式上看，是否更安全，如果是安全的，则不会有发生误操作的可能，能访问的方法都是被支持的。

透明性合成模式 —— 指从客户端使用合成模式上看，是否需要区分到底是“树枝对象”还是“树叶对象”。
                如果是透明的，则不用区分，对于客户而言，都是Component对象，具体的类型对于客户端而言是透明的，是无须关心的。

对于合成模式而言，在安全性和透明性上，会更看重透明性，
毕竟合成模式的目的是让客户端不再区分操作的是树枝对象还是树叶对象，而是以一个统一的方式来操作。
而对于安全性的实现，则需要区分是树枝对象还是树叶对象。
有时，需要将对象进行类型转换，却发现类型信息丢失了，只好强行进行转换，这种类型转换必然是不够安全的。
因此在使用合成模式时，建议多采用透明式的实现方式。
